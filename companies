#!/usr/bin/env python3

import asyncio
from aiohttp import web
import json
import base64
import sys
import argparse

class Api:

    def __init__(self, listen="0.0.0.0:8080", key=None, companies={}):
        self.listen = listen
        self.key = key
        self.companies=companies

        if key == None:
            self.secret = "abcdef102345"
        else:
            self.secret = key

        self.secret = base64.b64encode(
            (self.secret + ":").encode("utf-8")
        ).decode("utf-8")

    def check_auth(self, request):

        return
        try:

            tok = request.headers["Authorization"].split(" ")
            if tok[0] != "Bearer":
                raise web.HTTPUnauthorized()
            if tok[1] != self.access_token:
                raise web.HTTPUnauthorized()
        except:
            raise web.HTTPUnauthorized()

    async def get(self, request):

        self.check_auth(request)

        id = request.match_info["id"]

        if id in self.companies:
            return web.json_response(self.companies[id]["company"])

        return web.HTTPNotFound()

    async def get_officers(self, request):

        self.check_auth(request)

        id = request.match_info["id"]

        if id in self.companies:
            return web.json_response(self.companies[id]["officers"])

        return web.HTTPNotFound()

    async def run(self):

        app = web.Application()

        app.router.add_get('/company/{id}', self.get)
        app.router.add_get('/company/{id}/officers', self.get_officers)

        runner = web.AppRunner(app)
        await runner.setup()

        host = self.listen.split(":", 2)

        site = web.TCPSite(runner, host[0], host[1])
        await site.start()

        while True:
            await asyncio.sleep(1)

# Command-line argument parser
parser = argparse.ArgumentParser(description="Gnucash to HMRC VAT API")
parser.add_argument('--listen', '-l',
		    default='0.0.0.0:8080',
                    help='Host/port to listen on (default: 0.0.0.0:8080)')
parser.add_argument('--companies', '-c',
		    default='companies.json',
                    help='Data file to load at init (default: companies.json)')
parser.add_argument('--key', '-k',
                    help='A secret API key, default hard-coded')

# Parse arguments
args = parser.parse_args(sys.argv[1:])

companies = json.loads(open(args.companies).read())

a = Api(args.listen, key=args.key, companies=companies)

loop = asyncio.run(a.run())
